[{"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\index.js":"1","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\App.js":"2","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\footer\\Footer.js":"3","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\header\\Header.js":"4","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\pages\\Board.js":"5","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\write\\Write.js":"6","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\BoardList.js":"7","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\ListItem.js":"8","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\pages\\PostPage.js":"9","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\components\\Post.js":"10","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\BoardHeader.js":"11","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\BoardFooter.js":"12","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\pages\\UpdatePage.js":"13","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\components\\Update.js":"14"},{"size":168,"mtime":1611569489187,"results":"15","hashOfConfig":"16"},{"size":1407,"mtime":1614145636912,"results":"17","hashOfConfig":"16"},{"size":238,"mtime":1611636330149,"results":"18","hashOfConfig":"16"},{"size":415,"mtime":1611573953661,"results":"19","hashOfConfig":"16"},{"size":2431,"mtime":1614656352102,"results":"20","hashOfConfig":"16"},{"size":3022,"mtime":1614656406408,"results":"21","hashOfConfig":"16"},{"size":717,"mtime":1613032995837,"results":"22","hashOfConfig":"16"},{"size":587,"mtime":1611727512463,"results":"23","hashOfConfig":"16"},{"size":1333,"mtime":1614656390098,"results":"24","hashOfConfig":"16"},{"size":6240,"mtime":1614666627570,"results":"25","hashOfConfig":"16"},{"size":462,"mtime":1611578608979,"results":"26","hashOfConfig":"16"},{"size":808,"mtime":1613037148483,"results":"27","hashOfConfig":"16"},{"size":849,"mtime":1614656395442,"results":"28","hashOfConfig":"16"},{"size":3201,"mtime":1614656385684,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kwjxve",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\index.js",[],["62","63"],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\App.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\footer\\Footer.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\header\\Header.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\pages\\Board.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\write\\Write.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\BoardList.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\ListItem.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\pages\\PostPage.js",["64","65"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Post from \"../components/Post\";\r\n\r\nfunction  PostPage() {\r\n\r\n    const pid = useParams().pid;\r\n    const [loadedPost, setLoadedPost] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL+`/posts/${pid}`, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            }\r\n            );\r\n            const responseData = await response.json();\r\n            setLoadedPost(responseData.post);\r\n        } catch (err) {}\r\n        };\r\n        fetchPost();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchPostView = async () => {\r\n            try {\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL+`/posts/${pid}`, {\r\n                    method: 'PATCH',\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                const responseData = await response.json();\r\n                return responseData;\r\n            } catch (err) { }\r\n        };\r\n        fetchPostView();\r\n    }, []);\r\n\r\n    return(\r\n        <Post item={loadedPost}/>\r\n    );\r\n}\r\n\r\nexport default PostPage;","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\components\\Post.js",["66"],"import React, { useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport './Post.css';\r\n\r\nfunction  Post(props) {\r\n\r\n    const history = useHistory();\r\n    const pid = useParams().pid;\r\n    \r\n    const [ updateClicked, setUpdateClicked ] = useState(false); // update btn click\r\n    const [ isDelete, setIsDelete ] = useState(false);\r\n    const [ isModify, setIsModify ] = useState(false);\r\n    const [ isSubmit, setIsSubmit ] = useState(false);\r\n\r\n    const [ controllAuth, setControllAuth ] = useState( // pw input\r\n        {\r\n            pwAuth: ''\r\n        }\r\n    );\r\n    \r\n    const [ authClear, setAuthClear ] = useState(false); // pw auth\r\n\r\n    const postDeletedHandler = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL+`/posts/${pid}`, {\r\n                method: 'DELETE'\r\n            });\r\n            const responseData = await response.json();\r\n            history.push('/')\r\n            return responseData;\r\n        } catch (err) { }\r\n    };\r\n\r\n    const modifyHandler = e => { // update or delete btn click handle\r\n        e.preventDefault();\r\n        setUpdateClicked(true);\r\n        setIsModify(true);\r\n    }\r\n\r\n    const deleteHandler = e => {\r\n        e.preventDefault();\r\n        setUpdateClicked(true);\r\n        setIsDelete(true);\r\n    }\r\n\r\n    const handleChange = e => { // pw input\r\n        const { name, value } = e.target;\r\n        setControllAuth((prevControllAuths) => {\r\n            return {\r\n              ...prevControllAuths,\r\n              [name]: value\r\n            };\r\n          });\r\n    }\r\n\r\n    const authHander = async e => { // pw auth handle\r\n        e.preventDefault();\r\n        setIsSubmit(true);\r\n        try {\r\n            const response = await fetch(process.env.REACT_APP_BACKEND_URL+`/posts/:pid`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    password: controllAuth.pwAuth\r\n                })\r\n            });\r\n            const responseData = await response.json();\r\n            if(responseData){\r\n                setAuthClear(true);\r\n            }else {\r\n                alert(\"ID / PW가 다릅니다.\");\r\n            }\r\n            return responseData;\r\n        } catch (err) { }\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <div className=\"board-container\">\r\n            <div className=\"board-name-box\">\r\n                <h2 className=\"board-name\">{props.item.title}</h2>\r\n            </div>\r\n            <div className=\"post-frame\">\r\n                <div className=\"title-box\">\r\n                    <p>{props.item.title}</p>\r\n                </div>\r\n                <div className=\"writer-box\">\r\n                    <p className=\"post-writer\">작성자 : {props.item.writer}</p>\r\n                </div>\r\n                <div className=\"content-box\">\r\n                    <pre>{props.item.content}</pre>\r\n                </div>\r\n                <div className=\"post-btn-box\"> \r\n                {/* component로 수정하면 좋겠는데 */}\r\n                    {updateClicked \r\n                    ?\r\n                        isModify\r\n                        ?\r\n                        <div className=\"auth-input\">\r\n                            <input className=\"auth-pw\" type=\"password\" name=\"pwAuth\" value={controllAuth.pwAuth} placeholder=\"비밀번호\" onChange={handleChange}></input>\r\n                            {/* auth state is true, then Link*/}\r\n                            <button className=\"auth-button\" onClick={authHander}>확인</button>\r\n                            {/* auth ? link : error */}\r\n                            {isSubmit\r\n                                ?\r\n                                authClear\r\n                                    ?\r\n                                    <Link to={`/${pid}/update`}><button>수정</button></Link>\r\n                                    :\r\n                                    <p></p>\r\n                                :\r\n                                <p></p>\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div className=\"auth-input\">\r\n                            <input className=\"auth-pw\" type=\"password\" name=\"pwAuth\" value={controllAuth.pwAuth} placeholder=\"비밀번호\" onChange={handleChange}></input>\r\n                            {/* auth state is true, then Link*/}\r\n                            <button className=\"auth-button\" onClick={authHander}>확인</button>\r\n                            {/* auth ? link : error */}\r\n                            {isSubmit\r\n                                ?\r\n                                authClear\r\n                                    ?\r\n                                    <button onClick={postDeletedHandler}>삭제</button>\r\n                                    :\r\n                                    <p></p>\r\n                                :\r\n                                <p></p>\r\n                            }\r\n                        </div>\r\n                    :\r\n                        <div className=\"btn-div\"> \r\n                            <button className=\"update-btn\" onClick={modifyHandler}>수정</button>\r\n                            <button className=\"delete-btn\" onClick={deleteHandler}>삭제</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default React.memo(Post);\r\n\r\n// if(updateClicked){\r\n//     if(update){\r\n//         if(pwinput){\r\n//             link updatepage\r\n//         }else {\r\n//             alert\r\n//         }\r\n//     }else {\r\n//         if(pwinput){\r\n//             fetch delete\r\n//         }else {\r\n//             alert\r\n//         }\r\n//     }\r\n// }else {\r\n//     upd && del btn\r\n// }\r\n\r\n// {updateClicked\r\n//     ?\r\n//         isupdate\r\n//         ?\r\n//             pw\r\n//             ?\r\n//             <Link></Link>\r\n//             :\r\n//             alert\r\n//         :\r\n//             pw\r\n//             ?\r\n//             fetch\r\n//             :\r\n//             alert\r\n//     :\r\n\r\n// }","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\BoardHeader.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\board\\components\\BoardFooter.js",[],"C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\pages\\UpdatePage.js",["67"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Update from \"../components/Update\";\r\n\r\nfunction UpdatePage() {\r\n\r\n    const pid = useParams().pid;\r\n\r\n    const [loadedPost, setLoadedPost] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await fetch(process.env.REACT_APP_BACKEND_URL+`/posts/${pid}`, {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json' },\r\n            }\r\n            );\r\n            const responseData = await response.json();\r\n            setLoadedPost(responseData.post);\r\n        } catch (err) {}\r\n        };\r\n        fetchPost();\r\n    }, []);\r\n\r\n    return(\r\n        <Update item={loadedPost} />\r\n    );\r\n};\r\n\r\nexport default UpdatePage;","C:\\Users\\김형민\\Desktop\\web-board-project\\frontend\\src\\post\\components\\Update.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":8,"nodeType":"74","endLine":24,"endColumn":10,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"73","line":38,"column":8,"nodeType":"74","endLine":38,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":12,"column":13,"nodeType":"79","messageId":"80","endLine":12,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":25,"column":8,"nodeType":"74","endLine":25,"endColumn":10,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pid'. Either include it or remove the dependency array.","ArrayExpression",["84"],["85"],"no-unused-vars","'isDelete' is assigned a value but never used.","Identifier","unusedVar",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},{"desc":"87","fix":"90"},"Update the dependencies array to be: [pid]",{"range":"91","text":"92"},{"range":"93","text":"92"},{"range":"94","text":"92"},[743,745],"[pid]",[1240,1242],[750,752]]